TODO:
    - Exemplo!










(tidW, write ad) ~~~~~~~~~~~~~~~~~[tc]~~~~~~~~~~~~~~~~~>* (tidR, read ad)
                  (tidW, rel adx)      (tidR, acq adx)

Se não é guardado: prova antiga.

(OK)
guards adx ad m := exists T, m[adx].T = x&T /\ access m m[adx].t ad.

xguards adx ad m := guards adx ad m \/ exists t, xaccess adx ad m t.

Invariante guard_exclusive :
    guards adx  ad m ->
    guards adx' ad m ->
    adx = adx'.

Invariante guard_xaccess :
    guards  adx  ad m ->
    xaccess adx' ad m t ->
    adx = adx'.
     
Invariante xguard_exclusive :
    xguards adx  ad m ->
    xguards adx' ad m ->
    adx = adx'.

(OK)
inCR t ad := ...

(OK)
critical_access ad adX m t := ...

Lemma cacc_then_incr :
    cacc ad adX m t ->
    inCR adX t.

Invariante acc_then_cacc :
    guards ad adX m ->
    acc  ad m t ->
    cacc ad adX ad m t.

(Provado)
Invariante cr_exclusivity :
    tid1 <> tid2 ->
    inCR ad ths[tid1] ->
    ~ inCR ad ths[tid2].

Invariante cacc_exclusivity :
    tid1 <> tid2 ->
    cacc ad adX m ths[tid1] ->
    ~ acc ad m ths[tid2].

Invariante SMS :
    tid1 <> tid2 ->
    write_access ad m ths[tid1] ->
    ~ write_access ad m ths[tid2]

Tem que dar acquire para entrar na CR:
    ~ inCR ad ths1[tid1]->
    m1 / ths1 ~~[e]~~> m2 / ths2 ->
    inCR ad ths2[tid1] ->
    exists t, e = acq ad t.

Tem que dar release pra sair na CR:
    inCR ad ths1[tid1]->
    m1 / ths1 ~~[e]~~> m2 / ths2 ->
    ~ inCR ad ths2[tid1] ->
    e = rel ad.

Invariante:
    m[ad].T = w&T ->
    xacc adx ad m ths[tid1] ->
    (~ acc ad m ths[tid2] /\
     (tid1 <> tid2 -> ~ xacc adx' ad m ths[tid2]) /\
     (tid  == tid2 -> adx <> adx' -> ~ xacc adx' ad m ths[tid1]) /\
    )

cell
    option tm
    typ
    bool

cr flag adx t
