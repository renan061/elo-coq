DIGEST 962a0594b4dc7deb8101f2a17268588e
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
binder 994:994 <> n:1
binder 996:996 <> m:2
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n:1 var
R1012:1012 LF.Tactics <> m:2 var
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n:1 var
R1023:1023 LF.Tactics <> m:2 var
prf 1508:1513 <> silly2
R1535:1537 Coq.Init.Datatypes <> nat ind
binder 1525:1525 <> n:3
binder 1527:1527 <> m:4
binder 1529:1529 <> o:5
binder 1531:1531 <> p:6
R1548:1553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1544:1546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1543:1543 LF.Tactics <> n:3 var
R1547:1547 LF.Tactics <> m:4 var
R1554:1554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1577:1583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1560:1563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1556:1558 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1555:1555 LF.Tactics <> n:3 var
R1559:1559 LF.Tactics <> m:4 var
R1569:1571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1564:1564 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1566:1566 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1568:1568 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1565:1565 LF.Tactics <> n:3 var
R1567:1567 LF.Tactics <> o:5 var
R1572:1572 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1574:1574 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1576:1576 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1573:1573 LF.Tactics <> m:4 var
R1575:1575 LF.Tactics <> p:6 var
R1589:1591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1584:1584 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1586:1586 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1588:1588 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1585:1585 LF.Tactics <> n:3 var
R1587:1587 LF.Tactics <> o:5 var
R1592:1592 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1594:1594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1593:1593 LF.Tactics <> m:4 var
R1595:1595 LF.Tactics <> p:6 var
prf 2126:2132 <> silly2a
R2150:2152 Coq.Init.Datatypes <> nat ind
binder 2144:2144 <> n:7
binder 2146:2146 <> m:8
R2171:2177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2163:2165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2158:2158 LF.Poly <> :::'('_x_','_x_')' not
R2160:2160 LF.Poly <> :::'('_x_','_x_')' not
R2162:2162 LF.Poly <> :::'('_x_','_x_')' not
R2159:2159 LF.Tactics <> n:7 var
R2161:2161 LF.Tactics <> n:7 var
R2166:2166 LF.Poly <> :::'('_x_','_x_')' not
R2168:2168 LF.Poly <> :::'('_x_','_x_')' not
R2170:2170 LF.Poly <> :::'('_x_','_x_')' not
R2167:2167 LF.Tactics <> m:8 var
R2169:2169 LF.Tactics <> m:8 var
R2178:2178 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2225:2231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2193:2195 Coq.Init.Datatypes <> nat ind
binder 2187:2187 <> q:9
binder 2189:2189 <> r:10
R2212:2215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2204:2206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2199:2199 LF.Poly <> :::'('_x_','_x_')' not
R2201:2201 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Poly <> :::'('_x_','_x_')' not
R2200:2200 LF.Tactics <> q:9 var
R2202:2202 LF.Tactics <> q:9 var
R2207:2207 LF.Poly <> :::'('_x_','_x_')' not
R2209:2209 LF.Poly <> :::'('_x_','_x_')' not
R2211:2211 LF.Poly <> :::'('_x_','_x_')' not
R2208:2208 LF.Tactics <> r:10 var
R2210:2210 LF.Tactics <> r:10 var
R2219:2221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2216:2216 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2218:2218 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2217:2217 LF.Tactics <> q:9 var
R2222:2222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2224:2224 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2223:2223 LF.Tactics <> r:10 var
R2235:2237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2232:2232 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2234:2234 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2233:2233 LF.Tactics <> n:7 var
R2238:2238 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2240:2240 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2239:2239 LF.Tactics <> m:8 var
prf 2439:2446 <> silly_ex
binder 2457:2457 <> p:11
R2462:2462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2508:2514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2470:2470 <> n:12
R2486:2489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2479:2481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2473:2476 LF.Basics <> even def
R2478:2478 LF.Tactics <> n:12 var
R2482:2485 LF.Basics <> true constr
R2500:2502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2490:2493 LF.Basics <> even def
R2496:2496 Coq.Init.Datatypes <> S constr
R2498:2498 LF.Tactics <> n:12 var
R2503:2507 LF.Basics <> false constr
R2515:2515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2556:2562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2523:2523 <> n:13
R2540:2543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2532:2534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2531:2531 LF.Tactics <> n:13 var
R2535:2539 LF.Basics <> false constr
R2549:2551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2544:2546 LF.Basics <> odd def
R2548:2548 LF.Tactics <> n:13 var
R2552:2555 LF.Basics <> true constr
R2576:2581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2569:2571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2563:2566 LF.Basics <> even def
R2568:2568 LF.Tactics <> p:11 var
R2572:2575 LF.Basics <> true constr
R2591:2593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2582:2584 LF.Basics <> odd def
R2587:2587 Coq.Init.Datatypes <> S constr
R2589:2589 LF.Tactics <> p:11 var
R2594:2597 LF.Basics <> true constr
prf 2895:2900 <> silly3
R2918:2920 Coq.Init.Datatypes <> nat ind
binder 2912:2912 <> n:14
binder 2914:2914 <> m:15
R2931:2936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2927:2929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2926:2926 LF.Tactics <> n:14 var
R2930:2930 LF.Tactics <> m:15 var
R2938:2940 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2937:2937 LF.Tactics <> m:15 var
R2941:2941 LF.Tactics <> n:14 var
prf 3650:3662 <> rev_exercise1
R3681:3684 LF.Poly <> list ind
R3686:3688 Coq.Init.Datatypes <> nat ind
binder 3674:3674 <> l:16
binder 3676:3677 <> l':17
R3704:3709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3695:3697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3694:3694 LF.Tactics <> l:16 var
R3698:3700 LF.Poly <> rev def
R3702:3703 LF.Tactics <> l':17 var
R3712:3714 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3710:3711 LF.Tactics <> l':17 var
R3715:3717 LF.Poly <> rev def
R3719:3719 LF.Tactics <> l:16 var
R3773:3786 LF.Poly <> rev_involutive thm
R3773:3786 LF.Poly <> rev_involutive thm
def 4245:4260 <> trans_eq_example
R4286:4288 Coq.Init.Datatypes <> nat ind
binder 4272:4272 <> a:18
binder 4274:4274 <> b:19
binder 4276:4276 <> c:20
binder 4278:4278 <> d:21
binder 4280:4280 <> e:22
binder 4282:4282 <> f:23
R4310:4318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4302:4304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4297:4297 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4299:4299 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4301:4301 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4298:4298 LF.Tactics <> a:18 var
R4300:4300 LF.Tactics <> b:19 var
R4305:4305 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4307:4307 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4309:4309 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4306:4306 LF.Tactics <> c:20 var
R4308:4308 LF.Tactics <> d:21 var
R4332:4340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4324:4326 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4319:4319 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4321:4321 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4323:4323 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4320:4320 LF.Tactics <> c:20 var
R4322:4322 LF.Tactics <> d:21 var
R4327:4327 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4329:4329 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4331:4331 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4328:4328 LF.Tactics <> e:22 var
R4330:4330 LF.Tactics <> f:23 var
R4346:4348 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4341:4341 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4343:4343 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4345:4345 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4342:4342 LF.Tactics <> a:18 var
R4344:4344 LF.Tactics <> b:19 var
R4349:4349 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4351:4351 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4353:4353 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4350:4350 LF.Tactics <> e:22 var
R4352:4352 LF.Tactics <> f:23 var
prf 4613:4620 <> trans_eq
binder 4632:4632 <> X:24
R4649:4649 LF.Tactics <> X:24 var
binder 4641:4641 <> n:25
binder 4643:4643 <> m:26
binder 4645:4645 <> o:27
R4660:4663 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4656:4658 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4655:4655 LF.Tactics <> n:25 var
R4659:4659 LF.Tactics <> m:26 var
R4669:4672 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4665:4667 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4664:4664 LF.Tactics <> m:26 var
R4668:4668 LF.Tactics <> o:27 var
R4674:4676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4673:4673 LF.Tactics <> n:25 var
R4677:4677 LF.Tactics <> o:27 var
def 4932:4948 <> trans_eq_example'
R4974:4976 Coq.Init.Datatypes <> nat ind
binder 4960:4960 <> a:28
binder 4962:4962 <> b:29
binder 4964:4964 <> c:30
binder 4966:4966 <> d:31
binder 4968:4968 <> e:32
binder 4970:4970 <> f:33
R4998:5006 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4990:4992 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4985:4985 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4987:4987 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4989:4989 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4986:4986 LF.Tactics <> a:28 var
R4988:4988 LF.Tactics <> b:29 var
R4993:4993 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4995:4995 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4997:4997 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4994:4994 LF.Tactics <> c:30 var
R4996:4996 LF.Tactics <> d:31 var
R5020:5028 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5012:5014 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5007:5007 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5009:5009 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5011:5011 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5008:5008 LF.Tactics <> c:30 var
R5010:5010 LF.Tactics <> d:31 var
R5015:5015 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5017:5017 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5019:5019 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5016:5016 LF.Tactics <> e:32 var
R5018:5018 LF.Tactics <> f:33 var
R5034:5036 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5029:5029 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5031:5031 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5033:5033 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5030:5030 LF.Tactics <> a:28 var
R5032:5032 LF.Tactics <> b:29 var
R5037:5037 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5039:5039 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5041:5041 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5038:5038 LF.Tactics <> e:32 var
R5040:5040 LF.Tactics <> f:33 var
R5514:5514 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5516:5516 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5518:5518 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5496:5503 LF.Tactics <> trans_eq thm
R5514:5514 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5516:5516 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5518:5518 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5496:5503 LF.Tactics <> trans_eq thm
def 5998:6015 <> trans_eq_example''
R6041:6043 Coq.Init.Datatypes <> nat ind
binder 6027:6027 <> a:34
binder 6029:6029 <> b:35
binder 6031:6031 <> c:36
binder 6033:6033 <> d:37
binder 6035:6035 <> e:38
binder 6037:6037 <> f:39
R6065:6073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6057:6059 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6052:6052 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6054:6054 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6056:6056 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6053:6053 LF.Tactics <> a:34 var
R6055:6055 LF.Tactics <> b:35 var
R6060:6060 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6062:6062 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6064:6064 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6061:6061 LF.Tactics <> c:36 var
R6063:6063 LF.Tactics <> d:37 var
R6087:6095 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6079:6081 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6074:6074 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6076:6076 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6078:6078 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6075:6075 LF.Tactics <> c:36 var
R6077:6077 LF.Tactics <> d:37 var
R6082:6082 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6084:6084 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6086:6086 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6083:6083 LF.Tactics <> e:38 var
R6085:6085 LF.Tactics <> f:39 var
R6101:6103 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6096:6096 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6098:6098 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6100:6100 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6097:6097 LF.Tactics <> a:34 var
R6099:6099 LF.Tactics <> b:35 var
R6104:6104 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6106:6106 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6108:6108 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6105:6105 LF.Tactics <> e:38 var
R6107:6107 LF.Tactics <> f:39 var
R6163:6163 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6165:6165 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6167:6167 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6163:6163 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6165:6165 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6167:6167 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6280:6296 <> trans_eq_exercise
R6318:6320 Coq.Init.Datatypes <> nat ind
binder 6308:6308 <> n:40
binder 6310:6310 <> m:41
binder 6312:6312 <> o:42
binder 6314:6314 <> p:43
R6345:6353 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6330:6333 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6344:6344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6329:6329 LF.Tactics <> m:41 var
R6334:6341 LF.Basics <> minustwo def
R6343:6343 LF.Tactics <> o:42 var
R6365:6373 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6354:6354 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6360:6363 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6356:6358 LF.Basics <> ::nat_scope:x_'+'_x not
R6355:6355 LF.Tactics <> n:40 var
R6359:6359 LF.Tactics <> p:43 var
R6364:6364 LF.Tactics <> m:41 var
R6374:6374 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6380:6384 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6395:6395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6376:6378 LF.Basics <> ::nat_scope:x_'+'_x not
R6375:6375 LF.Tactics <> n:40 var
R6379:6379 LF.Tactics <> p:43 var
R6385:6392 LF.Basics <> minustwo def
R6394:6394 LF.Tactics <> o:42 var
prf 7771:7781 <> S_injective
R7799:7801 Coq.Init.Datatypes <> nat ind
binder 7793:7793 <> n:44
binder 7795:7795 <> m:45
R7816:7821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7810:7812 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7807:7807 Coq.Init.Datatypes <> S constr
R7809:7809 LF.Tactics <> n:44 var
R7813:7813 Coq.Init.Datatypes <> S constr
R7815:7815 LF.Tactics <> m:45 var
R7823:7825 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7822:7822 LF.Tactics <> n:44 var
R7826:7826 LF.Tactics <> m:45 var
R7868:7870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7871:7874 Coq.Init.Peano <> pred syndef
R7877:7877 Coq.Init.Datatypes <> S constr
R7868:7870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7871:7874 Coq.Init.Peano <> pred syndef
R7877:7877 Coq.Init.Datatypes <> S constr
prf 8366:8377 <> S_injective'
R8395:8397 Coq.Init.Datatypes <> nat ind
binder 8389:8389 <> n:46
binder 8391:8391 <> m:47
R8412:8417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8406:8408 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8403:8403 Coq.Init.Datatypes <> S constr
R8405:8405 LF.Tactics <> n:46 var
R8409:8409 Coq.Init.Datatypes <> S constr
R8411:8411 LF.Tactics <> m:47 var
R8419:8421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8418:8418 LF.Tactics <> n:46 var
R8422:8422 LF.Tactics <> m:47 var
prf 8933:8945 <> injection_ex1
R8965:8967 Coq.Init.Datatypes <> nat ind
binder 8957:8957 <> n:48
binder 8959:8959 <> m:49
binder 8961:8961 <> o:50
R8986:8991 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8978:8980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8973:8973 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8975:8975 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8977:8977 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8974:8974 LF.Tactics <> n:48 var
R8976:8976 LF.Tactics <> m:49 var
R8981:8981 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8983:8983 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8985:8985 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8982:8982 LF.Tactics <> o:50 var
R8984:8984 LF.Tactics <> o:50 var
R8993:8995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8992:8992 LF.Tactics <> n:48 var
R8996:8996 LF.Tactics <> m:49 var
def 9181:9193 <> injection_ex3
binder 9205:9205 <> X:51
R9224:9224 LF.Tactics <> X:51 var
binder 9216:9216 <> x:52
binder 9218:9218 <> y:53
binder 9220:9220 <> z:54
R9234:9237 LF.Poly <> list ind
R9239:9239 LF.Tactics <> X:51 var
binder 9228:9228 <> l:55
binder 9230:9230 <> j:56
R9265:9270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9256:9258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9246:9249 LF.Poly <> :::x_'::'_x not
R9245:9245 LF.Tactics <> x:52 var
R9251:9254 LF.Poly <> :::x_'::'_x not
R9250:9250 LF.Tactics <> y:53 var
R9255:9255 LF.Tactics <> l:55 var
R9260:9263 LF.Poly <> :::x_'::'_x not
R9259:9259 LF.Tactics <> z:54 var
R9264:9264 LF.Tactics <> j:56 var
R9281:9286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9272:9274 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9271:9271 LF.Tactics <> j:56 var
R9276:9279 LF.Poly <> :::x_'::'_x not
R9275:9275 LF.Tactics <> z:54 var
R9280:9280 LF.Tactics <> l:55 var
R9288:9290 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9287:9287 LF.Tactics <> x:52 var
R9291:9291 LF.Tactics <> y:53 var
prf 10174:10189 <> discriminate_ex1
R10207:10209 Coq.Init.Datatypes <> nat ind
binder 10201:10201 <> n:57
binder 10203:10203 <> m:58
R10227:10232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10220:10222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10215:10219 LF.Basics <> false constr
R10223:10226 LF.Basics <> true constr
R10234:10236 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10233:10233 LF.Tactics <> n:57 var
R10237:10237 LF.Tactics <> m:58 var
prf 10303:10318 <> discriminate_ex2
R10334:10336 Coq.Init.Datatypes <> nat ind
binder 10330:10330 <> n:59
R10349:10354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10345:10347 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10342:10342 Coq.Init.Datatypes <> S constr
R10344:10344 LF.Tactics <> n:59 var
R10348:10348 Coq.Init.Datatypes <> O constr
R10360:10362 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10356:10358 LF.Basics <> ::nat_scope:x_'+'_x not
def 11183:11198 <> discriminate_ex3
binder 11212:11212 <> X:60
R11231:11231 LF.Tactics <> X:60 var
binder 11223:11223 <> x:61
binder 11225:11225 <> y:62
binder 11227:11227 <> z:63
R11241:11244 LF.Poly <> list ind
R11246:11246 LF.Tactics <> X:60 var
binder 11235:11235 <> l:64
binder 11237:11237 <> j:65
R11270:11277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11265:11267 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11255:11258 LF.Poly <> :::x_'::'_x not
R11254:11254 LF.Tactics <> x:61 var
R11260:11263 LF.Poly <> :::x_'::'_x not
R11259:11259 LF.Tactics <> y:62 var
R11264:11264 LF.Tactics <> l:64 var
R11268:11269 LF.Poly <> :::'['_']' not
R11279:11281 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11278:11278 LF.Tactics <> x:61 var
R11282:11282 LF.Tactics <> z:63 var
prf 11537:11543 <> eqb_0_l
binder 11554:11554 <> n:66
R11573:11576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11566:11568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11561:11564 LF.Basics <> ::nat_scope:x_'=?'_x not
R11565:11565 LF.Tactics <> n:66 var
R11569:11572 LF.Basics <> true constr
R11578:11580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11577:11577 LF.Tactics <> n:66 var
prf 12479:12485 <> f_equal
binder 12497:12497 <> A:67
binder 12499:12499 <> B:68
R12514:12517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12513:12513 LF.Tactics <> A:67 var
R12518:12518 LF.Tactics <> B:68 var
binder 12510:12510 <> f:69
R12527:12527 LF.Tactics <> A:67 var
binder 12522:12522 <> x:70
binder 12524:12524 <> y:71
R12538:12541 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12534:12536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12533:12533 LF.Tactics <> x:70 var
R12537:12537 LF.Tactics <> y:71 var
R12545:12547 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12542:12542 LF.Tactics <> f:69 var
R12544:12544 LF.Tactics <> x:70 var
R12548:12548 LF.Tactics <> f:69 var
R12550:12550 LF.Tactics <> y:71 var
prf 12622:12642 <> eq_implies_succ_equal
R12660:12662 Coq.Init.Datatypes <> nat ind
binder 12654:12654 <> n:72
binder 12656:12656 <> m:73
R12673:12676 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12669:12671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12668:12668 LF.Tactics <> n:72 var
R12672:12672 LF.Tactics <> m:73 var
R12680:12682 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12677:12677 Coq.Init.Datatypes <> S constr
R12679:12679 LF.Tactics <> n:72 var
R12683:12683 Coq.Init.Datatypes <> S constr
R12685:12685 LF.Tactics <> m:73 var
R12715:12721 LF.Tactics <> f_equal thm
R12715:12721 LF.Tactics <> f_equal thm
prf 13146:13167 <> eq_implies_succ_equal'
R13185:13187 Coq.Init.Datatypes <> nat ind
binder 13179:13179 <> n:74
binder 13181:13181 <> m:75
R13198:13201 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13194:13196 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13193:13193 LF.Tactics <> n:74 var
R13197:13197 LF.Tactics <> m:75 var
R13205:13207 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13202:13202 Coq.Init.Datatypes <> S constr
R13204:13204 LF.Tactics <> n:74 var
R13208:13208 Coq.Init.Datatypes <> S constr
R13210:13210 LF.Tactics <> m:75 var
prf 13693:13697 <> S_inj
R13715:13717 Coq.Init.Datatypes <> nat ind
binder 13709:13709 <> n:76
binder 13711:13711 <> m:77
R13725:13728 LF.Basics <> bool ind
binder 13721:13721 <> b:78
R13754:13760 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13734:13734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13749:13752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13735:13735 LF.Basics <> ::nat_scope:x_'=?'_x not
R13739:13744 LF.Basics <> ::nat_scope:x_'=?'_x not
R13748:13748 LF.Basics <> ::nat_scope:x_'=?'_x not
R13736:13736 Coq.Init.Datatypes <> S constr
R13738:13738 LF.Tactics <> n:76 var
R13745:13745 Coq.Init.Datatypes <> S constr
R13747:13747 LF.Tactics <> m:77 var
R13753:13753 LF.Tactics <> b:78 var
R13761:13761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13768:13771 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13763:13766 LF.Basics <> ::nat_scope:x_'=?'_x not
R13762:13762 LF.Tactics <> n:76 var
R13767:13767 LF.Tactics <> m:77 var
R13772:13772 LF.Tactics <> b:78 var
prf 14603:14608 <> silly4
R14630:14632 Coq.Init.Datatypes <> nat ind
binder 14620:14620 <> n:79
binder 14622:14622 <> m:80
binder 14624:14624 <> p:81
binder 14626:14626 <> q:82
R14638:14638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14653:14659 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14644:14647 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14640:14642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14639:14639 LF.Tactics <> n:79 var
R14643:14643 LF.Tactics <> m:80 var
R14649:14651 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14648:14648 LF.Tactics <> p:81 var
R14652:14652 LF.Tactics <> q:82 var
R14665:14670 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14661:14663 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14660:14660 LF.Tactics <> m:80 var
R14664:14664 LF.Tactics <> n:79 var
R14672:14674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14671:14671 LF.Tactics <> q:82 var
R14675:14675 LF.Tactics <> p:81 var
prf 16302:16324 <> double_injective_FAILED
binder 16335:16335 <> n:83
binder 16337:16337 <> m:84
R16361:16366 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16350:16352 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16342:16347 LF.Induction <> double def
R16349:16349 LF.Tactics <> n:83 var
R16353:16358 LF.Induction <> double def
R16360:16360 LF.Tactics <> m:84 var
R16368:16370 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16367:16367 LF.Tactics <> n:83 var
R16371:16371 LF.Tactics <> m:84 var
R16674:16680 LF.Tactics <> f_equal thm
R16674:16680 LF.Tactics <> f_equal thm
prf 19024:19039 <> double_injective
binder 19050:19050 <> n:85
binder 19052:19052 <> m:86
R19076:19081 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19065:19067 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19057:19062 LF.Induction <> double def
R19064:19064 LF.Tactics <> n:85 var
R19068:19073 LF.Induction <> double def
R19075:19075 LF.Tactics <> m:86 var
R19083:19085 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19082:19082 LF.Tactics <> n:85 var
R19086:19086 LF.Tactics <> m:86 var
R19970:19976 LF.Tactics <> f_equal thm
R19970:19976 LF.Tactics <> f_equal thm
prf 21009:21016 <> eqb_true
binder 21027:21027 <> n:87
binder 21029:21029 <> m:88
R21047:21050 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21040:21042 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21035:21038 LF.Basics <> ::nat_scope:x_'=?'_x not
R21034:21034 LF.Tactics <> n:87 var
R21039:21039 LF.Tactics <> m:88 var
R21043:21046 LF.Basics <> true constr
R21052:21054 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21051:21051 LF.Tactics <> n:87 var
R21055:21055 LF.Tactics <> m:88 var
R21297:21299 LF.Basics <> eqb def
def 21575:21605 <> manual_grade_for_informal_proof
R21609:21614 Coq.Init.Datatypes <> option ind
R21620:21620 LF.Poly <> ::type_scope:x_'*'_x not
R21617:21619 Coq.Init.Datatypes <> nat ind
R21621:21626 Coq.Strings.String <> string ind
R21632:21635 Coq.Init.Datatypes <> None constr
prf 21874:21891 <> plus_n_n_injective
binder 21902:21902 <> n:89
binder 21904:21904 <> m:90
R21922:21927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21914:21916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21910:21912 LF.Basics <> ::nat_scope:x_'+'_x not
R21909:21909 LF.Tactics <> n:89 var
R21913:21913 LF.Tactics <> n:89 var
R21918:21920 LF.Basics <> ::nat_scope:x_'+'_x not
R21917:21917 LF.Tactics <> m:90 var
R21921:21921 LF.Tactics <> m:90 var
R21929:21931 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21928:21928 LF.Tactics <> n:89 var
R21932:21932 LF.Tactics <> m:90 var
binder 22136:22136 <> x:91
binder 22138:22138 <> y:92
R22150:22152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22144:22146 LF.Basics <> ::nat_scope:x_'+'_x not
R22141:22141 Coq.Init.Datatypes <> S constr
R22143:22143 LF.Tactics <> x:91 var
R22147:22147 Coq.Init.Datatypes <> S constr
R22149:22149 LF.Tactics <> y:92 var
R22153:22153 Coq.Init.Datatypes <> S constr
R22156:22156 Coq.Init.Datatypes <> S constr
R22160:22162 LF.Basics <> ::nat_scope:x_'+'_x not
R22159:22159 LF.Tactics <> x:91 var
R22163:22163 LF.Tactics <> y:92 var
binder 22136:22136 <> x:93
binder 22138:22138 <> y:94
R22150:22152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22144:22146 LF.Basics <> ::nat_scope:x_'+'_x not
R22141:22141 Coq.Init.Datatypes <> S constr
R22143:22143 LF.Tactics <> x:93 var
R22147:22147 Coq.Init.Datatypes <> S constr
R22149:22149 LF.Tactics <> y:94 var
R22153:22153 Coq.Init.Datatypes <> S constr
R22156:22156 Coq.Init.Datatypes <> S constr
R22160:22162 LF.Basics <> ::nat_scope:x_'+'_x not
R22159:22159 LF.Tactics <> x:93 var
R22163:22163 LF.Tactics <> y:94 var
R22205:22213 LF.Induction <> plus_n_Sm thm
R22216:22216 Coq.Init.Datatypes <> S constr
R22205:22213 LF.Induction <> plus_n_Sm thm
R22216:22216 Coq.Init.Datatypes <> S constr
R22205:22213 LF.Induction <> plus_n_Sm thm
R22216:22216 Coq.Init.Datatypes <> S constr
R22233:22240 LF.Induction <> add_comm thm
R22233:22240 LF.Induction <> add_comm thm
R22233:22240 LF.Induction <> add_comm thm
R22264:22272 LF.Induction <> plus_n_Sm thm
R22264:22272 LF.Induction <> plus_n_Sm thm
R22264:22272 LF.Induction <> plus_n_Sm thm
R22283:22290 LF.Induction <> add_comm thm
R22283:22290 LF.Induction <> add_comm thm
R22283:22290 LF.Induction <> add_comm thm
prf 22725:22753 <> double_injective_take2_FAILED
binder 22764:22764 <> n:95
binder 22766:22766 <> m:96
R22790:22795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22779:22781 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22771:22776 LF.Induction <> double def
R22778:22778 LF.Tactics <> n:95 var
R22782:22787 LF.Induction <> double def
R22789:22789 LF.Tactics <> m:96 var
R22797:22799 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22796:22796 LF.Tactics <> n:95 var
R22800:22800 LF.Tactics <> m:96 var
R23103:23109 LF.Tactics <> f_equal thm
R23103:23109 LF.Tactics <> f_equal thm
prf 24050:24071 <> double_injective_take2
binder 24082:24082 <> n:97
binder 24084:24084 <> m:98
R24108:24113 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24097:24099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24089:24094 LF.Induction <> double def
R24096:24096 LF.Tactics <> n:97 var
R24100:24105 LF.Induction <> double def
R24107:24107 LF.Tactics <> m:98 var
R24115:24117 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24114:24114 LF.Tactics <> n:97 var
R24118:24118 LF.Tactics <> m:98 var
R24604:24610 LF.Tactics <> f_equal thm
R24604:24610 LF.Tactics <> f_equal thm
prf 26736:26743 <> f_equal'
binder 26746:26746 <> A:99
binder 26748:26748 <> B:100
R26772:26775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26771:26771 LF.Tactics <> A:99 var
R26776:26776 LF.Tactics <> B:100 var
binder 26768:26768 <> f:101
R26785:26785 LF.Tactics <> A:99 var
binder 26780:26780 <> x:102
binder 26782:26782 <> y:103
R26796:26799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26792:26794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26791:26791 LF.Tactics <> x:102 var
R26795:26795 LF.Tactics <> y:103 var
R26803:26805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26800:26800 LF.Tactics <> f:101 var
R26802:26802 LF.Tactics <> x:102 var
R26806:26806 LF.Tactics <> f:101 var
R26808:26808 LF.Tactics <> y:103 var
prf 26873:26892 <> nth_error_after_last
R26907:26909 Coq.Init.Datatypes <> nat ind
binder 26903:26903 <> n:104
binder 26913:26913 <> X:105
R26928:26931 LF.Poly <> list ind
R26933:26933 LF.Tactics <> X:105 var
binder 26924:26924 <> l:106
R26951:26956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26947:26949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26939:26944 LF.Poly <> length def
R26946:26946 LF.Tactics <> l:106 var
R26950:26950 LF.Tactics <> n:104 var
R26970:26972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26957:26965 LF.Poly <> nth_error def
R26969:26969 LF.Tactics <> n:104 var
R26967:26967 LF.Tactics <> l:106 var
R26973:26976 Coq.Init.Datatypes <> None constr
def 27550:27555 <> square
binder 27557:27557 <> n:107
R27563:27565 LF.Basics <> ::nat_scope:x_'*'_x not
R27562:27562 LF.Tactics <> n:107 var
R27566:27566 LF.Tactics <> n:107 var
prf 27637:27647 <> square_mult
binder 27658:27658 <> n:108
binder 27660:27660 <> m:109
R27677:27679 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27663:27668 LF.Tactics <> square def
R27672:27674 LF.Basics <> ::nat_scope:x_'*'_x not
R27671:27671 LF.Tactics <> n:108 var
R27675:27675 LF.Tactics <> m:109 var
R27688:27690 LF.Basics <> ::nat_scope:x_'*'_x not
R27680:27685 LF.Tactics <> square def
R27687:27687 LF.Tactics <> n:108 var
R27691:27696 LF.Tactics <> square def
R27698:27698 LF.Tactics <> m:109 var
R28013:28018 LF.Tactics <> square def
R28337:28346 LF.Induction <> mult_assoc thm
R28337:28346 LF.Induction <> mult_assoc thm
R28337:28346 LF.Induction <> mult_assoc thm
R28372:28374 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28368:28370 LF.Basics <> ::nat_scope:x_'*'_x not
R28364:28366 LF.Basics <> ::nat_scope:x_'*'_x not
R28380:28382 LF.Basics <> ::nat_scope:x_'*'_x not
R28376:28378 LF.Basics <> ::nat_scope:x_'*'_x not
R28372:28374 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28368:28370 LF.Basics <> ::nat_scope:x_'*'_x not
R28364:28366 LF.Basics <> ::nat_scope:x_'*'_x not
R28380:28382 LF.Basics <> ::nat_scope:x_'*'_x not
R28376:28378 LF.Basics <> ::nat_scope:x_'*'_x not
R28401:28408 LF.Induction <> mul_comm thm
R28401:28408 LF.Induction <> mul_comm thm
R28401:28408 LF.Induction <> mul_comm thm
R28417:28426 LF.Induction <> mult_assoc thm
R28417:28426 LF.Induction <> mult_assoc thm
R28452:28461 LF.Induction <> mult_assoc thm
R28452:28461 LF.Induction <> mult_assoc thm
R28452:28461 LF.Induction <> mult_assoc thm
def 28847:28849 <> foo
R28855:28857 Coq.Init.Datatypes <> nat ind
binder 28852:28852 <> x:110
prf 29079:29090 <> silly_fact_1
binder 29101:29101 <> m:111
R29113:29115 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29109:29111 LF.Basics <> ::nat_scope:x_'+'_x not
R29104:29106 LF.Tactics <> foo def
R29108:29108 LF.Tactics <> m:111 var
R29127:29129 LF.Basics <> ::nat_scope:x_'+'_x not
R29116:29118 LF.Tactics <> foo def
R29122:29124 LF.Basics <> ::nat_scope:x_'+'_x not
R29121:29121 LF.Tactics <> m:111 var
def 29357:29359 <> bar
binder 29361:29361 <> x:112
R29374:29374 LF.Tactics <> x:112 var
R29385:29385 Coq.Init.Datatypes <> O constr
R29396:29396 Coq.Init.Datatypes <> S constr
prf 29470:29488 <> silly_fact_2_FAILED
binder 29499:29499 <> m:114
R29511:29513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29507:29509 LF.Basics <> ::nat_scope:x_'+'_x not
R29502:29504 LF.Tactics <> bar def
R29506:29506 LF.Tactics <> m:114 var
R29525:29527 LF.Basics <> ::nat_scope:x_'+'_x not
R29514:29516 LF.Tactics <> bar def
R29520:29522 LF.Basics <> ::nat_scope:x_'+'_x not
R29519:29519 LF.Tactics <> m:114 var
prf 30514:30525 <> silly_fact_2
binder 30536:30536 <> m:115
R30548:30550 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30544:30546 LF.Basics <> ::nat_scope:x_'+'_x not
R30539:30541 LF.Tactics <> bar def
R30543:30543 LF.Tactics <> m:115 var
R30562:30564 LF.Basics <> ::nat_scope:x_'+'_x not
R30551:30553 LF.Tactics <> bar def
R30557:30559 LF.Basics <> ::nat_scope:x_'+'_x not
R30556:30556 LF.Tactics <> m:115 var
prf 30912:30924 <> silly_fact_2'
binder 30935:30935 <> m:116
R30947:30949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30943:30945 LF.Basics <> ::nat_scope:x_'+'_x not
R30938:30940 LF.Tactics <> bar def
R30942:30942 LF.Tactics <> m:116 var
R30961:30963 LF.Basics <> ::nat_scope:x_'+'_x not
R30950:30952 LF.Tactics <> bar def
R30956:30958 LF.Basics <> ::nat_scope:x_'+'_x not
R30955:30955 LF.Tactics <> m:116 var
R30995:30997 LF.Tactics <> bar def
def 31643:31650 <> sillyfun
R31657:31659 Coq.Init.Datatypes <> nat ind
binder 31653:31653 <> n:117
R31664:31667 LF.Basics <> bool ind
R31678:31681 LF.Basics <> ::nat_scope:x_'=?'_x not
R31677:31677 LF.Tactics <> n:117 var
R31706:31709 LF.Basics <> ::nat_scope:x_'=?'_x not
R31705:31705 LF.Tactics <> n:117 var
R31730:31734 LF.Basics <> false constr
R31717:31721 LF.Basics <> false constr
R31689:31693 LF.Basics <> false constr
prf 31746:31759 <> sillyfun_false
R31775:31777 Coq.Init.Datatypes <> nat ind
binder 31771:31771 <> n:118
R31793:31795 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31783:31790 LF.Tactics <> sillyfun def
R31792:31792 LF.Tactics <> n:118 var
R31796:31800 LF.Basics <> false constr
R31829:31836 LF.Tactics <> sillyfun def
R31852:31855 LF.Basics <> ::nat_scope:x_'=?'_x not
R31852:31855 LF.Basics <> ::nat_scope:x_'=?'_x not
R31944:31947 LF.Basics <> ::nat_scope:x_'=?'_x not
R31944:31947 LF.Basics <> ::nat_scope:x_'=?'_x not
def 32820:32824 <> split
binder 32827:32827 <> X:119
binder 32829:32829 <> Y:120
R32844:32847 LF.Poly <> list ind
R32851:32851 LF.Poly <> ::type_scope:x_'*'_x not
R32850:32850 LF.Tactics <> X:119 var
R32852:32852 LF.Tactics <> Y:120 var
binder 32840:32840 <> l:121
R32873:32873 LF.Poly <> ::type_scope:x_'*'_x not
R32880:32884 LF.Poly <> ::type_scope:x_'*'_x not
R32891:32891 LF.Poly <> ::type_scope:x_'*'_x not
R32874:32877 LF.Poly <> list ind
R32879:32879 LF.Tactics <> X:119 var
R32885:32888 LF.Poly <> list ind
R32890:32890 LF.Tactics <> Y:120 var
R32904:32904 LF.Tactics <> l:121 var
R32915:32916 LF.Poly <> :::'['_']' not
R32921:32921 LF.Poly <> :::'('_x_','_x_')' not
R32924:32925 LF.Poly <> :::'('_x_','_x_')' not
R32928:32928 LF.Poly <> :::'('_x_','_x_')' not
R32922:32923 LF.Poly <> :::'['_']' not
R32926:32927 LF.Poly <> :::'['_']' not
R32940:32943 LF.Poly <> :::x_'::'_x not
R32934:32934 LF.Poly <> :::'('_x_','_x_')' not
R32936:32937 LF.Poly <> :::'('_x_','_x_')' not
R32939:32939 LF.Poly <> :::'('_x_','_x_')' not
R32961:32965 LF.Tactics <> split:122 def
R32982:32982 LF.Poly <> :::'('_x_','_x_')' not
R32985:32986 LF.Poly <> :::'('_x_','_x_')' not
R32989:32989 LF.Poly <> :::'('_x_','_x_')' not
R32994:32994 LF.Poly <> :::'('_x_','_x_')' not
R33002:33003 LF.Poly <> :::'('_x_','_x_')' not
R33011:33011 LF.Poly <> :::'('_x_','_x_')' not
R32996:32999 LF.Poly <> :::x_'::'_x not
R33005:33008 LF.Poly <> :::x_'::'_x not
prf 33121:33133 <> combine_split
binder 33144:33144 <> X:124
binder 33146:33146 <> Y:125
R33153:33156 LF.Poly <> list ind
R33160:33162 LF.Poly <> ::type_scope:x_'*'_x not
R33159:33159 LF.Tactics <> X:124 var
R33163:33163 LF.Tactics <> Y:125 var
binder 33149:33149 <> l:126
binder 33167:33168 <> l1:127
binder 33170:33171 <> l2:128
R33194:33199 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33183:33185 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33176:33180 LF.Tactics <> split def
R33182:33182 LF.Tactics <> l:126 var
R33186:33186 LF.Poly <> :::'('_x_','_x_')' not
R33189:33190 LF.Poly <> :::'('_x_','_x_')' not
R33193:33193 LF.Poly <> :::'('_x_','_x_')' not
R33187:33188 LF.Tactics <> l1:127 var
R33191:33192 LF.Tactics <> l2:128 var
R33213:33215 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33200:33206 LF.Poly <> combine def
R33211:33212 LF.Tactics <> l2:128 var
R33208:33209 LF.Tactics <> l1:127 var
R33216:33216 LF.Tactics <> l:126 var
R33407:33411 LF.Tactics <> split def
R33407:33411 LF.Tactics <> split def
def 34080:34088 <> sillyfun1
R34095:34097 Coq.Init.Datatypes <> nat ind
binder 34091:34091 <> n:129
R34102:34105 LF.Basics <> bool ind
R34116:34119 LF.Basics <> ::nat_scope:x_'=?'_x not
R34115:34115 LF.Tactics <> n:129 var
R34143:34146 LF.Basics <> ::nat_scope:x_'=?'_x not
R34142:34142 LF.Tactics <> n:129 var
R34166:34170 LF.Basics <> false constr
R34154:34157 LF.Basics <> true constr
R34127:34130 LF.Basics <> true constr
prf 34365:34384 <> sillyfun1_odd_FAILED
R34400:34402 Coq.Init.Datatypes <> nat ind
binder 34396:34396 <> n:130
R34426:34431 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34419:34421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34408:34416 LF.Tactics <> sillyfun1 def
R34418:34418 LF.Tactics <> n:130 var
R34422:34425 LF.Basics <> true constr
R34437:34439 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34432:34434 LF.Basics <> odd def
R34436:34436 LF.Tactics <> n:130 var
R34440:34443 LF.Basics <> true constr
R34475:34483 LF.Tactics <> sillyfun1 def
R34505:34508 LF.Basics <> ::nat_scope:x_'=?'_x not
R34505:34508 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 35310:35322 <> sillyfun1_odd
R35338:35340 Coq.Init.Datatypes <> nat ind
binder 35334:35334 <> n:131
R35364:35369 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35357:35359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35346:35354 LF.Tactics <> sillyfun1 def
R35356:35356 LF.Tactics <> n:131 var
R35360:35363 LF.Basics <> true constr
R35375:35377 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35370:35372 LF.Basics <> odd def
R35374:35374 LF.Tactics <> n:131 var
R35378:35381 LF.Basics <> true constr
R35413:35421 LF.Tactics <> sillyfun1 def
R35443:35446 LF.Basics <> ::nat_scope:x_'=?'_x not
R35443:35446 LF.Basics <> ::nat_scope:x_'=?'_x not
R35693:35700 LF.Tactics <> eqb_true thm
R35693:35700 LF.Tactics <> eqb_true thm
R35992:35995 LF.Basics <> ::nat_scope:x_'=?'_x not
R35992:35995 LF.Basics <> ::nat_scope:x_'=?'_x not
R36052:36059 LF.Tactics <> eqb_true thm
R36052:36059 LF.Tactics <> eqb_true thm
prf 36235:36256 <> bool_fn_applied_thrice
R36278:36281 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36274:36277 LF.Basics <> bool ind
R36282:36285 LF.Basics <> bool ind
binder 36270:36270 <> f:132
R36293:36296 LF.Basics <> bool ind
binder 36289:36289 <> b:133
R36313:36315 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36302:36302 LF.Tactics <> f:132 var
R36305:36305 LF.Tactics <> f:132 var
R36308:36308 LF.Tactics <> f:132 var
R36310:36310 LF.Tactics <> b:133 var
R36316:36316 LF.Tactics <> f:132 var
R36318:36318 LF.Tactics <> b:133 var
R36377:36380 LF.Basics <> true constr
R36377:36380 LF.Basics <> true constr
R36409:36412 LF.Basics <> true constr
R36409:36412 LF.Basics <> true constr
R36481:36485 LF.Basics <> false constr
R36481:36485 LF.Basics <> false constr
R36548:36552 LF.Basics <> false constr
R36548:36552 LF.Basics <> false constr
R36581:36584 LF.Basics <> true constr
R36581:36584 LF.Basics <> true constr
R36649:36653 LF.Basics <> false constr
R36649:36653 LF.Basics <> false constr
prf 39318:39324 <> eqb_sym
R39342:39344 Coq.Init.Datatypes <> nat ind
binder 39336:39336 <> n:134
binder 39338:39338 <> m:135
R39350:39350 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39357:39361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39368:39368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39352:39355 LF.Basics <> ::nat_scope:x_'=?'_x not
R39351:39351 LF.Tactics <> n:134 var
R39356:39356 LF.Tactics <> m:135 var
R39363:39366 LF.Basics <> ::nat_scope:x_'=?'_x not
R39362:39362 LF.Tactics <> m:135 var
R39367:39367 LF.Tactics <> n:134 var
prf 39918:39926 <> eqb_trans
binder 39937:39937 <> n:136
binder 39939:39939 <> m:137
binder 39941:39941 <> p:138
R39959:39964 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39952:39954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39947:39950 LF.Basics <> ::nat_scope:x_'=?'_x not
R39946:39946 LF.Tactics <> n:136 var
R39951:39951 LF.Tactics <> m:137 var
R39955:39958 LF.Basics <> true constr
R39978:39983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39971:39973 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39966:39969 LF.Basics <> ::nat_scope:x_'=?'_x not
R39965:39965 LF.Tactics <> m:137 var
R39970:39970 LF.Tactics <> p:138 var
R39974:39977 LF.Basics <> true constr
R39990:39992 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39985:39988 LF.Basics <> ::nat_scope:x_'=?'_x not
R39984:39984 LF.Tactics <> n:136 var
R39989:39989 LF.Tactics <> p:138 var
R39993:39996 LF.Basics <> true constr
R40037:40044 LF.Tactics <> eqb_true thm
R40037:40044 LF.Tactics <> eqb_true thm
R40067:40074 LF.Tactics <> eqb_true thm
R40067:40074 LF.Tactics <> eqb_true thm
R40106:40113 LF.Induction <> eqb_refl thm
R40106:40113 LF.Induction <> eqb_refl thm
R40106:40113 LF.Induction <> eqb_refl thm
def 40836:40858 <> split_combine_statement
binder 40879:40879 <> X:139
binder 40881:40881 <> Y:140
R40889:40892 LF.Poly <> list ind
R40894:40894 LF.Tactics <> X:139 var
binder 40884:40885 <> l1:141
R40903:40906 LF.Poly <> list ind
R40908:40908 LF.Tactics <> Y:140 var
binder 40898:40899 <> l2:142
R40937:40944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40925:40927 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40916:40921 LF.Poly <> length def
R40923:40924 LF.Tactics <> l1:141 var
R40928:40933 LF.Poly <> length def
R40935:40936 LF.Tactics <> l2:142 var
R40966:40968 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40945:40949 LF.Tactics <> split def
R40952:40958 LF.Poly <> combine def
R40963:40964 LF.Tactics <> l2:142 var
R40960:40961 LF.Tactics <> l1:141 var
R40969:40969 LF.Poly <> :::'('_x_','_x_')' not
R40972:40973 LF.Poly <> :::'('_x_','_x_')' not
R40976:40976 LF.Poly <> :::'('_x_','_x_')' not
R40970:40971 LF.Tactics <> l1:141 var
R40974:40975 LF.Tactics <> l2:142 var
prf 40986:40989 <> Sn_0
binder 41000:41000 <> n:143
R41012:41015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41008:41010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41005:41005 Coq.Init.Datatypes <> S constr
R41007:41007 LF.Tactics <> n:143 var
R41016:41020 Coq.Init.Logic <> False ind
prf 41082:41093 <> length_0_nil
binder 41104:41104 <> X:144
R41111:41114 LF.Poly <> list ind
R41116:41116 LF.Tactics <> X:144 var
binder 41107:41107 <> l:145
R41134:41137 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41130:41132 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41122:41127 LF.Poly <> length def
R41129:41129 LF.Tactics <> l:145 var
R41139:41141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41138:41138 LF.Tactics <> l:145 var
R41142:41143 LF.Poly <> :::'['_']' not
R41220:41223 LF.Tactics <> Sn_0 thm
R41220:41223 LF.Tactics <> Sn_0 thm
prf 41260:41272 <> split_combine
R41276:41298 LF.Tactics <> split_combine_statement def
R41403:41414 LF.Tactics <> length_0_nil thm
R41403:41414 LF.Tactics <> length_0_nil thm
R41511:41514 LF.Tactics <> Sn_0 thm
R41511:41514 LF.Tactics <> Sn_0 thm
R41550:41557 Coq.Init.Peano <> eq_add_S def
R41560:41565 LF.Poly <> length def
R41572:41577 LF.Poly <> length def
R41550:41557 Coq.Init.Peano <> eq_add_S def
R41560:41565 LF.Poly <> length def
R41572:41577 LF.Poly <> length def
def 41685:41714 <> manual_grade_for_split_combine
R41718:41723 Coq.Init.Datatypes <> option ind
R41729:41729 LF.Poly <> ::type_scope:x_'*'_x not
R41726:41728 Coq.Init.Datatypes <> nat ind
R41730:41735 Coq.Strings.String <> string ind
R41741:41744 Coq.Init.Datatypes <> None constr
prf 41922:41936 <> filter_exercise
binder 41948:41948 <> X:146
R41967:41970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41966:41966 LF.Tactics <> X:146 var
R41971:41974 LF.Basics <> bool ind
binder 41959:41962 <> test:147
R42015:42015 LF.Tactics <> X:146 var
binder 42011:42011 <> x:148
R42026:42029 LF.Poly <> list ind
R42031:42031 LF.Tactics <> X:146 var
binder 42019:42019 <> l:149
binder 42021:42022 <> lf:150
R42060:42065 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42050:42052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42037:42042 LF.Poly <> filter def
R42049:42049 LF.Tactics <> l:149 var
R42044:42047 LF.Tactics <> test:147 var
R42054:42057 LF.Poly <> :::x_'::'_x not
R42053:42053 LF.Tactics <> x:148 var
R42058:42059 LF.Tactics <> lf:150 var
R42072:42074 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42066:42069 LF.Tactics <> test:147 var
R42071:42071 LF.Tactics <> x:148 var
R42075:42078 LF.Basics <> true constr
def 43223:43229 <> forallb
binder 43232:43232 <> X:151
R43251:43254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43250:43250 LF.Tactics <> X:151 var
R43255:43258 LF.Basics <> bool ind
binder 43243:43246 <> test:152
R43266:43269 LF.Poly <> list ind
R43271:43271 LF.Tactics <> X:151 var
binder 43262:43262 <> l:153
R43276:43279 LF.Basics <> bool ind
R43292:43292 LF.Tactics <> l:153 var
R43303:43305 LF.Poly <> nil constr
R43310:43313 LF.Basics <> true constr
R43320:43323 LF.Poly <> :::x_'::'_x not
R43333:43336 LF.Tactics <> test:152 var
R43366:43370 LF.Basics <> false constr
R43345:43351 LF.Tactics <> forallb:154 def
R43353:43356 LF.Tactics <> test:152 var
def 43388:43401 <> test_forallb_1
R43428:43430 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43405:43411 LF.Tactics <> forallb def
R43417:43417 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43419:43419 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43421:43421 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43423:43423 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43425:43425 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43427:43427 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43413:43415 LF.Basics <> odd def
R43431:43434 LF.Basics <> true constr
def 43471:43484 <> test_forallb_2
R43514:43516 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43488:43494 LF.Tactics <> forallb def
R43501:43501 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43507:43507 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43513:43513 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43502:43506 LF.Basics <> false constr
R43508:43512 LF.Basics <> false constr
R43496:43499 LF.Basics <> negb def
R43517:43520 LF.Basics <> true constr
def 43557:43570 <> test_forallb_3
R43596:43598 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43574:43580 LF.Tactics <> forallb def
R43587:43587 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43589:43589 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43591:43591 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43593:43593 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43595:43595 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43582:43585 LF.Basics <> even def
R43599:43603 LF.Basics <> false constr
def 43640:43653 <> test_forallb_4
R43675:43677 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43657:43663 LF.Tactics <> forallb def
R43673:43674 LF.Poly <> :::'['_']' not
R43666:43668 LF.Basics <> eqb def
R43678:43681 LF.Basics <> true constr
def 43719:43725 <> existsb
binder 43728:43728 <> X:156
R43747:43750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43746:43746 LF.Tactics <> X:156 var
R43751:43754 LF.Basics <> bool ind
binder 43739:43742 <> test:157
R43762:43765 LF.Poly <> list ind
R43767:43767 LF.Tactics <> X:156 var
binder 43758:43758 <> l:158
R43772:43775 LF.Basics <> bool ind
R43788:43788 LF.Tactics <> l:158 var
R43799:43801 LF.Poly <> nil constr
R43806:43810 LF.Basics <> false constr
R43817:43820 LF.Poly <> :::x_'::'_x not
R43830:43833 LF.Tactics <> test:157 var
R43852:43858 LF.Tactics <> existsb:159 def
R43860:43863 LF.Tactics <> test:157 var
R43842:43845 LF.Basics <> true constr
def 43884:43897 <> test_existsb_1
R43926:43928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43901:43907 LF.Tactics <> existsb def
R43917:43917 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43919:43919 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43921:43921 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43923:43923 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43925:43925 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43910:43912 LF.Basics <> eqb def
R43929:43933 LF.Basics <> false constr
def 43970:43983 <> test_existsb_2
R44024:44026 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43987:43993 LF.Tactics <> existsb def
R44007:44007 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44012:44012 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44017:44017 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44023:44023 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44008:44011 LF.Basics <> true constr
R44013:44016 LF.Basics <> true constr
R44018:44022 LF.Basics <> false constr
R43996:43999 LF.Basics <> andb def
R44001:44004 LF.Basics <> true constr
R44027:44030 LF.Basics <> true constr
def 44067:44080 <> test_existsb_3
R44109:44111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44084:44090 LF.Tactics <> existsb def
R44096:44096 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44098:44098 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44100:44100 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44102:44102 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44104:44104 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44106:44106 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44108:44108 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44092:44094 LF.Basics <> odd def
R44112:44115 LF.Basics <> true constr
def 44152:44165 <> test_existsb_4
R44184:44186 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44169:44175 LF.Tactics <> existsb def
R44182:44183 LF.Poly <> :::'['_']' not
R44177:44180 LF.Basics <> even def
R44187:44191 LF.Basics <> false constr
def 44231:44238 <> existsb'
binder 44241:44241 <> X:161
R44260:44263 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44259:44259 LF.Tactics <> X:161 var
R44264:44267 LF.Basics <> bool ind
binder 44252:44255 <> test:162
R44275:44278 LF.Poly <> list ind
R44280:44280 LF.Tactics <> X:161 var
binder 44271:44271 <> l:163
R44285:44288 LF.Basics <> bool ind
R44295:44298 LF.Basics <> negb def
R44301:44307 LF.Tactics <> forallb def
R44334:44334 LF.Tactics <> l:163 var
binder 44314:44314 <> x:164
R44319:44322 LF.Basics <> negb def
R44325:44328 LF.Tactics <> test:162 var
R44330:44330 LF.Tactics <> x:164 var
def 44347:44361 <> test_existsb'_1
R44391:44393 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44365:44372 LF.Tactics <> existsb' def
R44382:44382 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44384:44384 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44386:44386 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44388:44388 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44390:44390 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44375:44377 LF.Basics <> eqb def
R44394:44398 LF.Basics <> false constr
def 44435:44449 <> test_existsb'_2
R44491:44493 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44453:44460 LF.Tactics <> existsb' def
R44474:44474 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44479:44479 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44484:44484 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44490:44490 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44475:44478 LF.Basics <> true constr
R44480:44483 LF.Basics <> true constr
R44485:44489 LF.Basics <> false constr
R44463:44466 LF.Basics <> andb def
R44468:44471 LF.Basics <> true constr
R44494:44497 LF.Basics <> true constr
def 44534:44548 <> test_existsb'_3
R44578:44580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44552:44559 LF.Tactics <> existsb' def
R44565:44565 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44567:44567 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44569:44569 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44571:44571 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44573:44573 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44575:44575 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44577:44577 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44561:44563 LF.Basics <> odd def
R44581:44584 LF.Basics <> true constr
def 44621:44635 <> test_existsb'_4
R44655:44657 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44639:44646 LF.Tactics <> existsb' def
R44653:44654 LF.Poly <> :::'['_']' not
R44648:44651 LF.Basics <> even def
R44658:44662 LF.Basics <> false constr
prf 44697:44706 <> negb_false
R44720:44722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44710:44713 LF.Basics <> negb def
R44715:44719 LF.Basics <> false constr
R44723:44726 LF.Basics <> true constr
prf 44763:44778 <> existsb_existsb'
binder 44790:44790 <> X:165
R44809:44812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44808:44808 LF.Tactics <> X:165 var
R44813:44816 LF.Basics <> bool ind
binder 44801:44804 <> test:166
R44824:44827 LF.Poly <> list ind
R44829:44829 LF.Tactics <> X:165 var
binder 44820:44820 <> l:167
R44849:44851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44835:44841 LF.Tactics <> existsb def
R44848:44848 LF.Tactics <> l:167 var
R44843:44846 LF.Tactics <> test:166 var
R44852:44859 LF.Tactics <> existsb' def
R44866:44866 LF.Tactics <> l:167 var
R44861:44864 LF.Tactics <> test:166 var
R44951:44958 LF.Tactics <> existsb' def
R45026:45033 LF.Tactics <> existsb' def
